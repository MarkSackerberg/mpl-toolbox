name: Dummy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CACHE: true
  RUST_VERSION: 1.65.0
  SOLANA_VERSION: 1.10.34
  NODE_VERSION: 16.x
  PROGRAMS: system-extras token-extras

jobs:
  build_programs:
    name: Build programs
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Prepare program environment
        uses: ./.github/actions/prepare-programs
        with:
          rust: ${{ env.RUST_VERSION }}
          solana: ${{ env.SOLANA_VERSION }}
          cache: ${{ env.CACHE }}

      - name: Build programs
        run: |
          for x in ${{ env.PROGRAMS }}; do
            (cd ./programs/$x && cargo build-bpf)
          done

      - name: Upload program builds
        uses: actions/upload-artifact@v3
        with:
          name: program-builds
          path: programs/**/target/deploy/*.so

  generate_clients:
    name: Generate clients
    runs-on: ubuntu-latest
    needs: build_programs
    permissions:
      contents: write
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Download program builds
        uses: actions/download-artifact@v3
        with:
          name: program-builds

      - name: Install Node.js
        uses: ./.github/actions/install-node
        with:
          version: ${{ env.NODE_VERSION }}
          cache: ${{ env.CACHE }}

      - name: Cache IDL generators
        if: env.CACHE == 'true'
        uses: actions/cache@v3
        with:
          path: ./.crates/
          key: ${{ runner.os }}-idl-generators-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-idl-generators

      - name: Generate IDLs and clients
        run: pnpm generate

      - name: Commit generated clients
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update generated clients

  test_js:
    name: Test JS client
    runs-on: ubuntu-latest
    needs: generate_clients
    strategy:
      matrix:
        node: ["16.x", "18.x"]
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Download program builds
        uses: actions/download-artifact@v3
        with:
          name: program-builds

      - name: Install Solana
        uses: ./.github/actions/install-solana
        with:
          version: ${{ env.SOLANA_VERSION }}
          cache: ${{ env.CACHE }}

      - name: Install Node.js v${{ matrix.node }}
        uses: ./.github/actions/install-node
        with:
          version: ${{ matrix.node }}
          cache: ${{ env.CACHE }}

      - name: Start local validator
        run: pnpm validator

      - name: Cache JS client dependencies
        if: inputs.cache == 'true'
        uses: actions/cache@v3
        with:
          path: ./clients/js/node_modules/
          key: ${{ runner.os }}-clients-js-${{ hashFiles('./clients/js/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-clients-js

      - name: Install JS client dependencies
        working-directory: ./clients/js
        run: pnpm install --frozen-lockfile

      - name: Build JS client
        working-directory: ./clients/js
        run: pnpm build

      - name: Test JS client
        working-directory: ./clients/js
        run: pnpm test
