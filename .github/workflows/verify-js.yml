name: Verify JS client

shared_inputs: &shared_inputs
  solana:
    required: true
    type: string
  node:
    required: true
    type: string
  cache:
    required: true
    type: string

on:
  workflow_call:
    inputs:
      <<: *shared_inputs
  workflow_dispatch:
    inputs:
      <<: *shared_inputs

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ["16.x", "18.x"]
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Start validator
        uses: ./.github/actions/start-validator
        with:
          node: ${{ matrix.node }}
          solana: ${{ inputs.solana }}
          cache: ${{ inputs.cache }}

      - name: Cache dependencies
        if: inputs.cache == 'true'
        uses: actions/cache@v3
        with:
          path: ./clients/js/node_modules/
          key: ${{ runner.os }}-clients-js-${{ hashFiles('./clients/js/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-clients-js

      - name: Install dependencies
        working-directory: ./clients/js
        run: pnpm install --frozen-lockfile

      - name: Build
        working-directory: ./clients/js
        run: pnpm build

      - name: Test
        working-directory: ./clients/js
        run: pnpm test

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: ./.github/actions/install-node
        with:
          version: ${{ inputs.node }}
          cache: ${{ inputs.cache }}

      - name: Cache dependencies
        if: inputs.cache == 'true'
        uses: actions/cache@v3
        with:
          path: ./clients/js/node_modules/
          key: ${{ runner.os }}-clients-js-${{ hashFiles('./clients/js/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-clients-js

      - name: Install dependencies
        working-directory: ./clients/js
        run: pnpm install --frozen-lockfile

      - name: Format
        working-directory: ./clients/js
        run: pnpm format

      - name: Lint
        working-directory: ./clients/js
        run: pnpm lint
