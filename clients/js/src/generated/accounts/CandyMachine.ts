/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Account,
  Context,
  PublicKey,
  RpcAccount,
  Serializer,
  assertAccountExists,
  deserializeAccount,
} from '@lorisleiva/js-core';
import { CandyMachineData, getCandyMachineDataSerializer } from '../types';

export type CandyMachine = Account<CandyMachineData>;

export type CandyMachineData = {
  /** Features versioning flags. */
  features: bigint;
  /** Authority address. */
  authority: PublicKey;
  /** Authority address allowed to mint from the candy machine. */
  mintAuthority: PublicKey;
  /** The collection mint for the candy machine. */
  collectionMint: PublicKey;
  /** Number of assets redeemed. */
  itemsRedeemed: bigint;
  /** Candy machine configuration data. */
  data: CandyMachineData;
};

export async function fetchCandyMachine(
  context: Pick<Context, 'serializer' | 'eddsa' | 'rpc'>,
  address: PublicKey
): Promise<CandyMachine> {
  const maybeAccount = await context.rpc.getAccount(address);
  assertAccountExists(maybeAccount, 'CandyMachine');
  return deserializeCandyMachine(context, maybeAccount);
}

export async function safeFetchCandyMachine(
  context: Pick<Context, 'serializer' | 'eddsa' | 'rpc'>,
  address: PublicKey
): Promise<CandyMachine | null> {
  const maybeAccount = await context.rpc.getAccount(address);
  return maybeAccount.exists
    ? deserializeCandyMachine(context, maybeAccount)
    : null;
}

export function deserializeCandyMachine(
  context: Pick<Context, 'serializer' | 'eddsa'>,
  rawAccount: RpcAccount
): CandyMachine {
  return deserializeAccount(rawAccount, getCandyMachineDataSerializer(context));
}

export function getCandyMachineDataSerializer(
  context: Pick<Context, 'serializer' | 'eddsa'>
): Serializer<CandyMachineData> {
  const s = context.serializer;
  return s.struct<CandyMachineData>(
    [
      ['features', s.u64],
      ['authority', s.publicKey(context)],
      ['mintAuthority', s.publicKey(context)],
      ['collectionMint', s.publicKey(context)],
      ['itemsRedeemed', s.u64],
      ['data', getCandyMachineDataSerializer(context)],
    ],
    'CandyMachine'
  );
}
